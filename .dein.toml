[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
repo = 'Shougo/vimproc.vim'
[[plugins]]
repo = 'Shougo/denite.nvim'
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# Colors
[[plugins]]
repo = 'arcticicestudio/nord-vim'
hook_add = '''
  set termguicolors
  colorscheme nord
'''

# yank highlight
[[plugins]]
repo = 'machakann/vim-highlightedyank'
hook_add = '''
  let g:highlightedyank_highlight_duration = 300
'''
# caw
[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
  nmap <Leader>c <Plug>(caw:zeropos:toggle)
  vmap <Leader>c <Plug>(caw:zeropos:toggle)
'''

# whitespace
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# indent
[[plugins]]
repo = 'Yggdroot/indentLine'

# Coc
[[plugins]]
repo = 'neoclide/coc.nvim'
build = 'coc#util#install()'
hook_add = '''
  source ~/.config/nvim/coc-setting.vim
'''

# easy motion
[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
  let g:EasyMotion_smartcase = 1
  map  f <Plug>(easymotion-bd-f)
  nmap f <Plug>(easymotion-overwin-f)
  map  W <Plug>(easymotion-bd-w)
  nmap W <Plug>(easymotion-overwin-w)
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
  \ 'colorscheme': 'wombat',
  \ 'mode_map': {'c': 'NORMAL'},
  \ 'active': {
    \   'left': [ [ 'mode', 'paste' ], [ 'fugitive', 'filename' ] ]
      \ },
  \ 'component_function': {
    \   'modified': 'LightlineModified',
    \   'readonly': 'LightlineReadonly',
    \   'fugitive': 'LightlineFugitive',
    \   'filename': 'LightlineFilename',
    \   'fileformat': 'LightlineFileformat',
    \   'filetype': 'LightlineFiletype',
    \   'fileencoding': 'LightlineFileencoding',
    \   'mode': 'LightlineMode'
      \ }
  \ }

function! LightlineModified()
  return &ft =~ 'help\|vimfiler\|gundo' ? '' : &modified ? '+' : &modifiable ? '' : '-'
  endfunction

function! LightlineReadonly()
  return &ft !~? 'help\|vimfiler\|gundo' && &readonly ? 'x' : ''
  endfunction

function! LightlineFilename()
  return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
  \ (&ft == 'vimfiler' ? vimfiler#get_status_string() :
      \  &ft == 'unite' ? unite#get_status_string() :
      \  &ft == 'vimshell' ? vimshell#get_status_string() :
      \ '' != expand('%:t') ? expand('%:t') : '[No Name]') .
  \ ('' != LightlineModified() ? ' ' . LightlineModified() : '')
  endfunction

function! LightlineFugitive()
  if &ft !~? 'vimfiler\|gundo' && exists('*fugitive#head')
return fugitive#head()
  else
  return ''
  endif
  endfunction

function! LightlineFileformat()
  return winwidth(0) > 70 ? &fileformat : ''
  endfunction

function! LightlineFiletype()
  return winwidth(0) > 70 ? (&filetype !=# '' ? &filetype : 'no ft') : ''
  endfunction

function! LightlineFileencoding()
  return winwidth(0) > 70 ? (&fenc !=# '' ? &fenc : &enc) : ''
  endfunction

function! LightlineMode()
  return winwidth(0) > 60 ? lightline#mode() : ''
  endfunction
  '''

