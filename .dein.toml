[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
repo = 'Shougo/vimproc.vim'
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# Colors
[[plugins]]
repo =  'catppuccin/nvim'
hook_add = '''
  set termguicolors
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  colorscheme catppuccin
  let g:doom_one_terminal_colors = v:true
  autocmd ColorScheme * highlight Normal  guibg=None
  autocmd ColorScheme * highlight NonText guibg=None
'''

# lightline
[[plugins]]
repo    = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
      \ 'colorscheme': 'catppuccin',
      \ }
'''

# tmux
[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
  nnoremap <C-J> <C-W>j
  nnoremap <C-K> <C-W>k
  nnoremap <C-H> <C-W>h
  nnoremap <C-L> <C-W>l
'''



# yank highlight
[[plugins]]
repo = 'machakann/vim-highlightedyank'
hook_add = '''
  let g:highlightedyank_highlight_duration = 200
'''

# comment out
[[plugins]]
repo = 'preservim/nerdcommenter'
hook_add = '''
  " Create default mappings
  let g:NERDCreateDefaultMappings = 1

  " Add spaces after comment delimiters by default
  let g:NERDSpaceDelims = 1

  " Use compact syntax for prettified multi-line comments
  let g:NERDCompactSexyComs = 1

  " Align line-wise comment delimiters flush left instead of following code indentation
  let g:NERDDefaultAlign = 'left'

  " Set a language to use its alternate delimiters by default
  let g:NERDAltDelims_java = 1

  " Add your own custom formats or override the defaults
  let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }

  " Allow commenting and inverting empty lines (useful when commenting a region)
  let g:NERDCommentEmptyLines = 1

  " Enable trimming of trailing whitespace when uncommenting
  let g:NERDTrimTrailingWhitespace = 1

  " Enable NERDCommenterToggle to check all selected lines is commented or not 
  let g:NERDToggleCheckAllLines = 1
'''

# git
[[plugins]]
repo = 'airblade/vim-gitgutter'
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  nnoremap <leader>gap :Git add %:p<CR><CR>
  nnoremap <leader>gaa :Git add .<CR><CR>
  nnoremap <leader>gc :Gcommit<CR><CR>
  nnoremap <leader>gs :Gstatus<CR>
  nnoremap <leader>gp :Gpush<CR>
  nnoremap <leader>gd :Gdiff<CR>
  nnoremap <leader>gl :Glog<CR>
  nnoremap <leader>gb :Gblame<CR>
'''

# indent
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_fileTypeExclude = ['md', 'markdown']
'''

# easy motion
[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
  let g:EasyMotion_smartcase = 1
  nnoremap  <C-f> <Plug>(easymotion-s2)
  nnoremap f <Plug>(easymotion-fl)
  nnoremap t <Plug>(easymotion-tl)
  nnoremap F <Plug>(easymotion-Fl)
  nnoremap T <Plug>(easymotion-Tl)
'''

# d2
[[plugins]]
repo = 'terrastruct/d2-vim'

# fzf
[[plugins]]
repo = 'junegunn/fzf'
build = 'fzf#install()'
hook_add = '''
  noremap <C-p> :Files<CR>
  noremap <leader><space> :Command<CR>
'''
[[plugins]]
repo = 'junegunn/fzf.vim'

# lspconfig
[[plugins]]
repo = 'williamboman/mason.nvim'
[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
[[plugins]]
repo = 'neovim/nvim-lspconfig'

# treesitter
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_post_update = 'TSUpdate'

# nvim cmp
[[plugins]]
repo = 'hrsh7th/cmp-nvim-lsp'
[[plugins]]
repo = 'hrsh7th/cmp-buffer'
[[plugins]]
repo = 'hrsh7th/cmp-path'
[[plugins]]
repo = 'hrsh7th/cmp-cmdline'
[[plugins]]
repo = 'hrsh7th/nvim-cmp'

[[plugins]]
repo = 'github/copilot.vim'
hook_add = '''
'''

[[plugins]]
repo = 'rmagatti/goto-preview'
[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
